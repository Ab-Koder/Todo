{"version":3,"sources":["backend.js","App.js","helper/todosHelper.js","index.js"],"names":["API","process","Todos","useState","todo","todosList","flip","error","update","currentTodoId","values","setValues","useEffect","fetch","method","then","res","json","catch","err","console","log","addMyTodo","headers","Accept","body","JSON","stringify","addTodo","data","removeTodo","id","deleteTodo","updateThisTodo","updateTodo","markThisComplete","markComplete","className","type","placeholder","onChange","event","target","value","onClick","map","t","isCompleted","key","_id","checked","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31a18a77.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_BACKEND\r\nexport default API","import React, {useState, useEffect} from 'react'\nimport { addTodo, getAllTodos, deleteTodo, updateTodo, markComplete } from './helper/todosHelper'\nimport './App.css';\n\nconst Todos = () => {\n\n  const [values, setValues] = useState({\n    todo: \"\",\n    todosList: [],\n    flip: true,\n    error: \"\",\n    update: false,\n    currentTodoId: null,\n  })\n\n  const {todo, todosList, flip, error, update, currentTodoId} = values\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      todo: event.target.value \n    })\n  }\n\n  useEffect(() => {\n    getAllTodos()\n      .then(todosList => {\n        setValues({\n          ...values,\n          todosList: todosList\n        })\n      })\n      .catch(err => console.log(err))\n      console.log(todosList)\n  }, [flip])\n\n\n  const addMyTodo = (todo) => {\n    console.log(\"TODO\", todo )\n    addTodo(todo)\n    .then(data => {\n      console.log(\"DATA\", data)\n      if(data.error){\n        setValues({\n          ...values,\n          error: data.error\n        })\n        console.log(\"ERROR\", error)\n      } else {\n        console.log(\"TODO ADDED\")\n        setValues({\n          ...values,\n          flip: !flip,\n          todo: ''\n        })\n      }\n    }\n    )}\n\n  const removeTodo = (id) => {\n    deleteTodo(id)\n      .then( data => {\n        console.log(\"DELETE\", data)\n        setValues({\n          ...values,\n          flip: !flip\n        })\n      })\n  }\n\n  const updateThisTodo = (id, todo) => {\n    updateTodo(id, todo)\n      .then(data => {\n        if(data.error){\n          console.log(\"DATA.ERROR\", error)\n          setValues({\n            ...values,\n            error: data.error\n          })\n        } else {\n          setValues({\n            flip: !flip,\n            todo: ''\n          })\n        }\n        \n      })\n      .catch(err => console.log(\"UPDATE ERROR\",err))\n  }\n\n  const markThisComplete = (id) => {\n    markComplete(id)\n      .then(data => {\n        if(data.error){\n          setValues({\n            ...values,\n            error: data.error\n          })\n          console.log(\"MARK COMPLETE\", error)\n        } else {\n          setValues({\n            ...values,\n            flip: !flip\n          })\n        }\n      })\n  }\n  \n  return(\n    <div className=\"container\">\n      <div className=\"header mb-3 mt-3\"> \n        <h1 className=\"text-center text-light heading display-4\">TODO APP</h1>\n        <span></span>\n      </div>\n      <div className=\"addTodos text-center mt-3 row\">   \n      <div className=\"input-group input-group-lg d-flex justify-content-center col-6 offset-3\">\n      <input \n            type=\"text\" \n            className=\"form-control font-weight-bold w-75 todo-input text-dark\"\n            placeholder=\"Enter Todo\"\n            onChange={handleChange}\n            value={todo}\n          />\n      <div className=\"input-group-append text-center\">\n      <button className=\"btn btn-primary\" type=\"button\" onClick={() => {\n            if(update){\n              updateThisTodo(currentTodoId, todo);\n              setValues({\n                ...values,\n                flip: !flip,\n                todo: '',\n                update: false,\n                currentTodoId: null,\n              })\n            } else {\n              addMyTodo(todo)\n            }\n              \n          }}>{update ? \"Update\" : \"Add\"}</button>\n          <button className={`btn btn-primary ${update ? '' : 'd-none'}`} onClick={() => {\n            setValues({\n              ...values,\n              todo: '',\n              update: false,\n            })\n          }}>Cancel</button>\n      </div>\n      </div>        \n        </div>\n        <div className=\"todosList d-flex justify-content-center text-center mt-3\">\n          <ul className=\"list-group text-center w-50 list-style-none\">\n            {todosList?.map((t) => {\n              return(\n              <li className={`list-group-item ${t.isCompleted ? 'text-success' : 'text-primary'}`} key={t._id}>\n              <div className=\"form-check\">\n              <input\n              type=\"checkbox\"\n              className=\"float-left checkbox\"\n              onClick={() => {\n                markThisComplete(t._id)\n              }}\n              checked={t.isCompleted ? true : false}\n              />\n              <label className=\"form-check-label h4 todo\">\n                {t.todo}\n              </label>\n              <button className=\"btn btn-danger float-right mx-1\" onClick={() => removeTodo(t._id)} disabled={update ? true : false}>Delete</button>\n              <button className=\"btn btn-info float-right mx-1\" onClick={() => {\n                setValues({\n                  ...values,\n                  todo: t.todo,\n                  update: true,\n                  currentTodoId: t._id,\n                })                \n              }}\n              disabled={update ? true : false}\n              >Edit</button>  \n              </div>\n                \n                \n                \n              \n              </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n  )\n}\n\nexport default Todos;\n\n// class Todos extends React.Component{\n//   constructor(props){\n//     super(props);\n\n//     this.state = {\n//       todo: '',\n//       todosList: [],\n//       todoId: '',\n//     }\n\n//     this.onTextBoxChange = this.onTextBoxChange.bind(this)\n//     this.addTodo = this.addTodo.bind(this)\n//     this.deleteTodo = this.deleteTodo.bind(this)\n//     this.doneTodo = this.doneTodo.bind(this)\n//   }\n\n//   componentDidMount(){\n//     const {todosList} = this.state\n//     fetch(\"http://localhost:5000/api/todos\")\n//       .then(res => res.json())\n//       .then(json => {\n//         json.forEach((item, index) => {\n//           this.setState({\n//             todosList: [...this.state.todosList, item],\n//             todo: ''\n//           })\n//         })\n//       }\n//     )\n//   }\n\n//   onTextBoxChange(event){\n//     this.setState({\n//       todo: event.target.value\n//     })\n//   }\n\n//   addTodo(){\n//     const {todo, todosList} = this.state\n//     if(!todo){\n//       console.log(\"error\");\n//     } else {\n//       fetch(\"http://localhost:5000/api/add\",\n//       { method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           todo: todo,\n//         })\n\n//       }).then(res => res.json())\n//         .then(json => {\n//           if(json.success){\n//             this.setState({\n//               todosList: [...this.state.todosList, json],\n//               todo: ''\n//             })\n//           }\n//         })\n//     }\n  \n//   }\n  \n//   deleteTodo(id){\n//     const {todosList} = this.state\n//     fetch('http://localhost:5000/api/delete/'+id, {\n//       method: \"GET\"\n//     })\n//     .then(res => res.json)\n//     .then(json => {\n//       const newList = todosList.filter((todo) => todo._id !== id)\n//       this.setState({\n//         todosList: newList\n//       })\n//     }) \n//     .catch(err=> console.log(err))\n    \n//   }\n\n//   doneTodo(){\n    \n//   }\n\n//   render(){\n//     const {todo, todosList} = this.state\n    \n//     const listItems = todosList.map((todo) =>{\n//       return (\n//       <li className=\"list-group-item\" key={todo._id}>\n//         <span>{todo.todo}</span>\n//         <button className=\"float-right btn  btn-sm btn-primary mx-1\" onClick={() => this.deleteTodo(todo._id)}>Delete</button>\n//         <button className=\"float-right btn btn-sm btn-primary mx-1\" onClick={this.doneTodo}>Done</button>\n//       </li>\n    \n//       )\n//       })\n    \n//     return(\n//       <div className=\"container\">\n//         <div className=\"header mb-3\"> \n//           <h1 className=\"text-center\">TODO APP</h1>\n//     <span></span>\n//         </div>\n//         <div className=\"addTodos text-center mt-3\">\n//           <input \n//             type=\"text\" \n//             placeholder=\"Enter Todo\"\n//             onChange={this.onTextBoxChange}\n//             value={todo}\n//           />\n//           <button className=\"btn btn-primary\" onClick={this.addTodo}>Add</button>\n//         </div>\n//         <div className=\"todosList d-flex justify-content-center text-center mt-3\">\n//           <ul className=\"list-group text-center w-50 list-style-none\">\n//           {listItems}\n//           </ul>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\n","import API from '../backend'\r\n\r\nexport const addTodo = (todo) => {\r\n    return fetch(`${API}/add`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            todo: todo\r\n        })\r\n    }).then(res => {\r\n        return res;    \r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const getAllTodos = () => {\r\n    return fetch(`${API}/todos`, {\r\n        method: \"GET\"\r\n    })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const deleteTodo = (id) => {\r\n    return fetch(`${API}/delete/${id}`, {\r\n        method: 'DELETE'\r\n    })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const updateTodo = (id, todo) => {\r\n    return fetch(`${API}/update/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            todo: todo\r\n        })\r\n    })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const markComplete = (id) => {\r\n    return fetch(`${API}/mark/${id}`, {\r\n        method: \"PUT\"\r\n    }).then(res => res.json())\r\n    .catch(err => console.log(err))\r\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Todos from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Todos />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}